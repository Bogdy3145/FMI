N=program decllist declaration type1 arraydecl type cmpdstmt stmtlist stmt simplstmt assignstmt expression term factor iostmt structstmt ifstmt whilestmt condition RELATION
E=plus minus ori impartit_la ia_locul_la mai_mic_ca mai_mic_egal_ca egal_cu mai_mare_egal_ca mai_mare_ca diferit_de modulo [ ] ( ) { } : ; , space lista constanta altfel daca atunci numar_intreg cuvant ori_alba_ori_neagra caracter_simplu numar_cu_virgula citeste EU_BOGDAN_DECLAR cat_timp fa printeaza_urmatoarele armaghedon amin no_dai no_stai de_tip IDENTIFIER CONST
P=program->decllist amin
P=program->decllist stmtlist amin
P=program->stmtlist amin
P=program->amin
P=decllist->EU_BOGDAN_DECLAR declaration
P=decllist->declaration decllist
P=declaration->IDENTIFIER de_tip type
P=type1->numar_intreg
P=type1->ori_alba_ori_neagra
P=type1->caracter_simplu
P=type1->cuvant
P=arraydecl->lista [ ] de_tip type1
P=type->type1
P=type->arraydecl
P=cmpdstmt->no_dai stmtlist no_stai
P=stmtlist->stmt
P=stmtlist->stmt stmtlist
P=stmt->simplstmt
P=stmt->structstmt
P=simplstmt->assignstmt
P=simplstmt->iostmt
P=assignstmt->expression ia_locul_la IDENTIFIER
P=expression->expression plus term
P=expression->expression minus term
P=expression->expression ori term
P=expression->expression impartit_la term
P=expression->expression modulo term
P=expression->term
P=term->term plus factor
P=term->term minus factor
P=term->term ori factor
P=term->term impartit_la factor
P=term->term modulo factor
P=term->factor
P=factor->expression
P=factor->IDENTIFIER
P=factor->CONST
P=iostmt->citeste IDENTIFIER
P=iostmt->printeaza_urmatoarele ( IDENTIFIER | IDENTIFIER { , IDENTIFIER } | CONST )
P=structstmt->cmpdstmt
P=structstmt->ifstmt
P=structstmt->whilestmt
P=ifstmt->daca condition atunci cmpdstmt
P=ifstmt->daca condition atunci cmpdstmt altfel cmpdstmt
P=whilestmt->cat_timp condition fa cmpdstmt
P=condition->expression RELATION expression
P=RELATION->mai_mic_ca
P=RELATION->mai_mic_egal_ca
P=RELATION->egal_cu
P=RELATION->diferit_de
P=RELATION->mai_mare_egal_ca
P=RELATION->mai_mare_ca
S=program